apiVersion: v1
kind: Namespace
metadata:
  name: devops-ucu
---
# CHOCOAPP
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chocoapp
  namespace: devops-ucu
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chocoapp
  template:
    metadata:
      labels:
        app: chocoapp
    spec:
      containers:
        - name: chocoapp
          image: chocoapp
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 10
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: chocoapp-svc
  namespace: devops-ucu
spec:
  selector:
    app: chocoapp
  type: NodePort
  ports:
    - name: http
      port: 80
      targetPort: 8080
      nodePort: 30880
---
# PROMETHEUS
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: devops-ucu
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:latest
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus/
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: devops-ucu
data:
  prometheus.yml: |
    global:
      scrape_interval: 5s

    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

      - job_name: 'chocoapp'
        metrics_path: '/actuator/prometheus'
        static_configs:
          - targets: ['chocoapp-svc.devops-ucu.svc.cluster.local:80']
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-svc
  namespace: devops-ucu
spec:
  selector:
    app: prometheus
  type: NodePort
  ports:
    - name: http
      port: 9090
      targetPort: 9090
      nodePort: 30900
---
# GRAFANA
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: devops-ucu
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:latest
          ports:
            - containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: "admin"
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: "admin"
          volumeMounts:
            - name: grafana-datasource
              mountPath: /etc/grafana/provisioning/datasources/
      volumes:
        - name: grafana-datasource
          configMap:
            name: grafana-datasource
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasource
  namespace: devops-ucu
data:
  datasource.yml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus-svc.devops-ucu.svc.cluster.local:9090
        isDefault: true
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-svc
  namespace: devops-ucu
spec:
  selector:
    app: grafana
  type: NodePort
  ports:
    - name: http
      port: 3000
      targetPort: 3000
      nodePort: 30300